import os

def disable_smb(host_name, smb_version, is_ntlm=None):
    from remote_connection_helper import get_winrm_result
    try:
        command = f"""
        Set-SmbServerConfiguration -EnableSMB{smb_version}Protocol $false -Confirm:$false | Out-Null
        $true
        """
        result = get_winrm_result(host_name, command, is_ntlm=is_ntlm)
        if result.strip().lower() == "true":
            return {'status': True, 'note': f'SMB version {smb_version} disabled successfully.'}
        else:
            return {'status': False, 'note': f'Failed to disable SMB version {smb_version}.'}

    except Exception as exception:
        print(exception)
        return {'status': False, 'note': 'An error occurred during execution'}

def enable_smb(host_name, smb_version, is_ntlm=None):
    from remote_connection_helper import get_winrm_result
    try:
        command = f"""
        Set-SmbServerConfiguration -EnableSMB{smb_version}Protocol $true -Confirm:$false | Out-Null
        $true
        """
        result = get_winrm_result(host_name, command, is_ntlm=is_ntlm)
        if result.strip().lower() == "true":
            return {'status': True, 'note': f'SMB version {smb_version} enabled successfully.'}
        else:
            return {'status': False, 'note': f'Failed to enable SMB version {smb_version}.'}

    except Exception as exception:
        print(exception)
        return {'status': False, 'note': 'An error occurred during execution'}

def check_smb_status(host_name, smb_version, action=None, is_ntlm=None):
    from remote_connection_helper import get_winrm_result
    try:
        command = f"""
        $smb_enabled = Get-SmbServerConfiguration -ErrorAction SilentlyContinue | Select EnableSMB{smb_version}Protocol | ForEach-Object {{ $_.EnableSMB{smb_version}Protocol }}
        $smb_enabled
        """
        result = get_winrm_result(host_name, command, is_ntlm=is_ntlm)
        if action == "pre":
            if result.strip().lower() == "true":
                return {'status': True, 'note': f'SMB version {smb_version} is enabled.'}
            else:
                return {'status': False, 'note': f'SMB version {smb_version} is already disabled.'}
        elif action == "post":
            if result.strip().lower() == "false":
                return {'status': True, 'note': f'SMB version {smb_version} is disabled.'}
            else:
                return {'status': False, 'note': f'SMB version {smb_version} is still enabled.'}
        elif action is None:
            return {'status': False, 'note': 'No action specified.'}
        else:
            return {'status': False, 'note': f'Invalid action specified: {action}'}

    except Exception as exception:
        print(exception)
        return {'status': False, 'note': 'An error occurred during execution'}

